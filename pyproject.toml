[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "whisper-transcriber"
version = "1.0.0"
description = "AI-powered audio transcription tool with GUI using OpenAI Whisper"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "ORIX IT Group", email = "contact@orixitgroup.com"},
]
maintainers = [
    {name = "ORIX IT Group - Enterprise Systems Development Division"},
]
keywords = [
    "whisper",
    "transcription",
    "audio",
    "speech-to-text",
    "ai",
    "machine-learning",
    "gui",
    "tkinter"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11"
dependencies = [
    "openai-whisper==20250625",
    "torch==2.8.0",
    "torchaudio==2.8.0",
    "PyAudio==0.2.14",
    "numpy==2.3.3",
    "numba==0.62.0",
    "regex==2025.9.18",
    "tiktoken==0.11.0",
    "requests==2.32.5",
    "urllib3==2.5.0",
    "certifi==2025.8.3",
    "charset-normalizer==3.4.3",
    "idna==3.10",
    "fsspec==2025.9.0",
    "filelock==3.19.1",
    "packaging==25.0",
    "tqdm==4.67.1",
    "sympy==1.14.0",
    "mpmath==1.3.0",
    "networkx==3.5",
    "more-itertools==10.8.0",
    "Jinja2==3.1.6",
    "MarkupSafe==3.0.2",
    "typing_extensions==4.15.0",
]

[project.optional-dependencies]
dev = [
    "pyinstaller==6.16.0",
    "pyinstaller-hooks-contrib==2025.8",
    "py2app==0.28.8",
    "altgraph==0.17.4",
    "macholib==1.16.3",
    "modulegraph==0.19.6",
    "pytest>=7.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
audio = [
    "pydub>=0.25.0",
    "librosa>=0.10.0",
    "soundfile>=0.12.0",
    "ffmpeg-python>=0.2.0",
]
all = [
    "whisper-transcriber[dev,audio]",
]

[project.urls]
"Homepage" = "https://github.com/boredviki/Python-Projects"
"Bug Reports" = "https://github.com/boredviki/Python-Projects/issues"
"Source" = "https://github.com/boredviki/Python-Projects/tree/Whisper"
"Documentation" = "https://github.com/boredviki/Python-Projects/tree/Whisper/README.md"

[project.scripts]
whisper-transcriber = "whisper_transcriber:main"
whisper-gui = "whisper_gui:main"

[project.gui-scripts]
WhisperTranscriber = "whisper_gui:main"

[tool.setuptools]
packages = ["whisper_transcriber", "whisper_gui"]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.cfg", "*.ini"]

[tool.black]
line-length = 88
target-version = ['py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["whisper_transcriber", "whisper_gui"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "*.egg-info",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "-ra",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["whisper_transcriber", "whisper_gui"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.pyinstaller]
# Configuration for PyInstaller
bootloader_ignore_signals = false
debug = false
strip = false
upx = true
console = false
name = "WhisperTranscriber"

[tool.pyinstaller.analysis]
excludes = ["_tkinter"]
hiddenimports = [
    "torch",
    "torchaudio", 
    "whisper",
    "tkinter",
]

[tool.pyinstaller.datas]
files = [
    ["whisper_transcriber.py", "."],
]